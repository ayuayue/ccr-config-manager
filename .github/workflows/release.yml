name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            asset_name: linux-amd64
            build_command: "wails build -platform linux/amd64"
          - os: windows-latest
            platform: windows
            asset_name: windows-amd64
            build_command: "wails build -platform windows/amd64"
          - os: macos-latest
            platform: darwin
            asset_name: macos-amd64
            build_command: "wails build -platform darwin/amd64"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Wails v2 推荐的依赖
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            libwebkit2gtk-4.0-dev || \
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev || \
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev

      - name: Install NSIS (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install nsis -y
          echo "C:\Program Files (x86)\NSIS" >> $env:GITHUB_PATH

      - name: Build application
        run: ${{ matrix.build_command }}

      - name: Build Windows NSIS Installer (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          wails build -nsis -platform windows/amd64

      - name: Upload regular build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.asset_name }}
          path: |
            build/bin/*
          if-no-files-found: ignore

      - name: Upload Windows NSIS installer (Windows only)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-windows-installer
          path: |
            build/bin/*.exe
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          find . -type f -name "*" | sort

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-linux-amd64/*
            app-windows-amd64/*
            app-windows-installer/*
            app-macos-amd64/*
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}