name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            platform: linux
            asset_name: linux-amd64
            build_command: "wails build -platform linux/amd64"
          - os: windows-latest
            platform: windows
            asset_name: windows-amd64
            build_command: "wails build -platform windows/amd64"
          - os: macos-latest
            platform: darwin
            asset_name: macos-amd64
            build_command: "wails build -platform darwin/amd64"
          - os: macos-latest
            platform: darwin-arm64
            asset_name: macos-arm64
            build_command: "wails build -platform darwin/arm64"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Debug matrix values (Linux)
        if: contains(matrix.os, 'ubuntu')
        run: |
          echo "Debug: This step should run on Ubuntu"
          echo "Matrix OS: ${{ matrix.os }}"
          echo "Matrix platform: ${{ matrix.platform }}"
          
      - name: Install system dependencies (Linux)
        if: contains(matrix.os, 'ubuntu')
        timeout-minutes: 10
        run: |
          echo "Starting system dependencies installation..."
          echo "Runner OS: ${{ matrix.os }}"
          echo "Runner platform: ${{ matrix.platform }}"
          echo "Current user: $(whoami)"
          echo "Current directory: $(pwd)"
          echo "Available disk space:"
          df -h
          
          echo "Updating package list..."
          sudo apt-get update -y
          
          echo "Installing build tools..."
          sudo apt-get install -y build-essential pkg-config
          
          echo "Installing GTK3 dependencies..."
          sudo apt-get install -y libgtk-3-dev
          
          echo "Installing WebKit2GTK 4.0 dependencies..."
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          
          echo "Verifying installations..."
          echo "Checking installed packages:"
          pkg-config --modversion gtk+-3.0 || echo "gtk+-3.0 not found"
          pkg-config --modversion webkit2gtk-4.0 || echo "webkit2gtk-4.0 not found"
          
          echo "Package config paths:"
          pkg-config --variable pc_path pkg-config
          
          echo "System dependencies installation completed."
    

      - name: Install NSIS (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install nsis -y
          echo "C:\Program Files (x86)\NSIS" >> $env:GITHUB_PATH

      - name: Build application
        run: ${{ matrix.build_command }}

      - name: Build Windows NSIS Installer (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          wails build -nsis -platform windows/amd64

      - name: Upload regular build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.asset_name }}
          path: |
            build/bin/*
          if-no-files-found: ignore

      - name: Upload Windows NSIS installer (Windows only)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-windows-installer
          path: |
            build/bin/*.exe
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          find . -type f -name "*" | sort

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-linux-amd64/*
            app-windows-amd64/*
            app-windows-installer/*.exe
            app-macos-amd64/*
            app-macos-arm64/*
          body: |
            ## 发布说明
            
            本版本包含以下平台的构建产物：
            
            ### Linux
            - `app-linux-amd64/*` - Linux x86_64版本
            
            ### Windows
            - `app-windows-amd64/*` - Windows x86_64版本
            - `app-windows-installer/*.exe` - Windows安装程序
            
            ### macOS
            - `app-macos-amd64/*` - macOS Intel版本
            - `app-macos-arm64/*` - macOS M1/M2芯片版本
            
            请根据您的操作系统和架构选择相应的版本下载。
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}